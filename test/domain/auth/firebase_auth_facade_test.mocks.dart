// Mocks generated by Mockito 5.3.0 from annotations
// in we_pay/test/domain/auth/firebase_auth_facade_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:typed_data' as _i11;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i3;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_messaging/firebase_messaging.dart' as _i12;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i7;
import 'package:google_sign_in/google_sign_in.dart' as _i9;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_1 extends _i1.SmartFake
    implements _i3.ActionCodeInfo {
  _FakeActionCodeInfo_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeConfirmationResult_3 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSettings_4 extends _i1.SmartFake implements _i5.Settings {
  _FakeSettings_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCollectionReference_5<T extends Object?> extends _i1.SmartFake
    implements _i6.CollectionReference<T> {
  _FakeCollectionReference_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeWriteBatch_6 extends _i1.SmartFake implements _i6.WriteBatch {
  _FakeWriteBatch_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeLoadBundleTask_7 extends _i1.SmartFake
    implements _i6.LoadBundleTask {
  _FakeLoadBundleTask_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQuerySnapshot_8<T extends Object?> extends _i1.SmartFake
    implements _i6.QuerySnapshot<T> {
  _FakeQuerySnapshot_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQuery_9<T extends Object?> extends _i1.SmartFake
    implements _i6.Query<T> {
  _FakeQuery_9(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDocumentReference_10<T extends Object?> extends _i1.SmartFake
    implements _i6.DocumentReference<T> {
  _FakeDocumentReference_10(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeNotificationSettings_11 extends _i1.SmartFake
    implements _i7.NotificationSettings {
  _FakeNotificationSettings_11(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i4.FirebaseAuth {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
          returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          returnValueForMissingStub:
              _FakeFirebaseApp_0(this, Invocation.getter(#app)))
      as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) =>
      super.noSuchMethod(Invocation.setter(#app, _app),
          returnValueForMissingStub: null);
  @override
  set tenantId(String? tenantId) =>
      super.noSuchMethod(Invocation.setter(#tenantId, tenantId),
          returnValueForMissingStub: null);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
              returnValue: <dynamic, dynamic>{},
              returnValueForMissingStub: <dynamic, dynamic>{})
          as Map<dynamic, dynamic>);
  @override
  _i8.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
      Invocation.method(#useEmulator, [origin]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> useAuthEmulator(String? host, int? port) =>
      (super.noSuchMethod(Invocation.method(#useAuthEmulator, [host, port]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
      Invocation.method(#applyActionCode, [code]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<_i3.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#checkActionCode, [code]),
              returnValue: _i8.Future<_i3.ActionCodeInfo>.value(
                  _FakeActionCodeInfo_1(
                      this, Invocation.method(#checkActionCode, [code]))),
              returnValueForMissingStub: _i8.Future<_i3.ActionCodeInfo>.value(
                  _FakeActionCodeInfo_1(
                      this, Invocation.method(#checkActionCode, [code]))))
          as _i8.Future<_i3.ActionCodeInfo>);
  @override
  _i8.Future<void> confirmPasswordReset({String? code, String? newPassword}) =>
      (super.noSuchMethod(
              Invocation.method(#confirmPasswordReset, [],
                  {#code: code, #newPassword: newPassword}),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<_i4.UserCredential> createUserWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(Invocation.method(#createUserWithEmailAndPassword, [], {#email: email, #password: password}),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this,
                      Invocation.method(#createUserWithEmailAndPassword, [],
                          {#email: email, #password: password}))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(this, Invocation.method(#createUserWithEmailAndPassword, [], {#email: email, #password: password}))))
          as _i8.Future<_i4.UserCredential>);
  @override
  _i8.Future<List<String>> fetchSignInMethodsForEmail(String? email) => (super
          .noSuchMethod(Invocation.method(#fetchSignInMethodsForEmail, [email]),
              returnValue: _i8.Future<List<String>>.value(<String>[]),
              returnValueForMissingStub:
                  _i8.Future<List<String>>.value(<String>[]))
      as _i8.Future<List<String>>);
  @override
  _i8.Future<_i4.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(Invocation.method(#getRedirectResult, []),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#getRedirectResult, []))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#getRedirectResult, []))))
          as _i8.Future<_i4.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
      Invocation.method(#isSignInWithEmailLink, [emailLink]),
      returnValue: false,
      returnValueForMissingStub: false) as bool);
  @override
  _i8.Stream<_i4.User?> authStateChanges() =>
      (super.noSuchMethod(Invocation.method(#authStateChanges, []),
              returnValue: _i8.Stream<_i4.User?>.empty(),
              returnValueForMissingStub: _i8.Stream<_i4.User?>.empty())
          as _i8.Stream<_i4.User?>);
  @override
  _i8.Stream<_i4.User?> idTokenChanges() =>
      (super.noSuchMethod(Invocation.method(#idTokenChanges, []),
              returnValue: _i8.Stream<_i4.User?>.empty(),
              returnValueForMissingStub: _i8.Stream<_i4.User?>.empty())
          as _i8.Stream<_i4.User?>);
  @override
  _i8.Stream<_i4.User?> userChanges() =>
      (super.noSuchMethod(Invocation.method(#userChanges, []),
              returnValue: _i8.Stream<_i4.User?>.empty(),
              returnValueForMissingStub: _i8.Stream<_i4.User?>.empty())
          as _i8.Stream<_i4.User?>);
  @override
  _i8.Future<void> sendPasswordResetEmail(
          {String? email, _i3.ActionCodeSettings? actionCodeSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#sendPasswordResetEmail, [],
                  {#email: email, #actionCodeSettings: actionCodeSettings}),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> sendSignInLinkToEmail(
          {String? email, _i3.ActionCodeSettings? actionCodeSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#sendSignInLinkToEmail, [],
                  {#email: email, #actionCodeSettings: actionCodeSettings}),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
      Invocation.method(#setLanguageCode, [languageCode]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> setSettings(
          {bool? appVerificationDisabledForTesting,
          String? userAccessGroup,
          String? phoneNumber,
          String? smsCode,
          bool? forceRecaptchaFlow}) =>
      (super.noSuchMethod(
              Invocation.method(#setSettings, [], {
                #appVerificationDisabledForTesting:
                    appVerificationDisabledForTesting,
                #userAccessGroup: userAccessGroup,
                #phoneNumber: phoneNumber,
                #smsCode: smsCode,
                #forceRecaptchaFlow: forceRecaptchaFlow
              }),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> setPersistence(_i3.Persistence? persistence) =>
      (super.noSuchMethod(Invocation.method(#setPersistence, [persistence]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<_i4.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(Invocation.method(#signInAnonymously, []),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#signInAnonymously, []))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#signInAnonymously, []))))
          as _i8.Future<_i4.UserCredential>);
  @override
  _i8.Future<_i4.UserCredential> signInWithCredential(
          _i3.AuthCredential? credential) =>
      (super.noSuchMethod(Invocation.method(#signInWithCredential, [credential]),
          returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
              this, Invocation.method(#signInWithCredential, [credential]))),
          returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                  this, Invocation.method(#signInWithCredential, [credential])))) as _i8
          .Future<_i4.UserCredential>);
  @override
  _i8.Future<_i4.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#signInWithCustomToken, [token]),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#signInWithCustomToken, [token]))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(this,
                      Invocation.method(#signInWithCustomToken, [token]))))
          as _i8.Future<_i4.UserCredential>);
  @override
  _i8.Future<_i4.UserCredential> signInWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this,
                      Invocation.method(#signInWithEmailAndPassword, [],
                          {#email: email, #password: password}))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(this, Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}))))
          as _i8.Future<_i4.UserCredential>);
  @override
  _i8.Future<_i4.UserCredential> signInWithEmailLink(
          {String? email, String? emailLink}) =>
      (super.noSuchMethod(Invocation.method(#signInWithEmailLink, [], {#email: email, #emailLink: emailLink}),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this,
                      Invocation.method(#signInWithEmailLink, [],
                          {#email: email, #emailLink: emailLink}))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(this, Invocation.method(#signInWithEmailLink, [], {#email: email, #emailLink: emailLink}))))
          as _i8.Future<_i4.UserCredential>);
  @override
  _i8.Future<_i4.UserCredential> signInWithAuthProvider(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithAuthProvider, [provider]),
          returnValue: _i8.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
              this, Invocation.method(#signInWithAuthProvider, [provider]))),
          returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
              _FakeUserCredential_2(
                  this, Invocation.method(#signInWithAuthProvider, [provider])))) as _i8
          .Future<_i4.UserCredential>);
  @override
  _i8.Future<_i4.ConfirmationResult> signInWithPhoneNumber(String? phoneNumber,
          [_i4.RecaptchaVerifier? verifier]) =>
      (super.noSuchMethod(Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
              returnValue: _i8.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
                  this,
                  Invocation.method(
                      #signInWithPhoneNumber, [phoneNumber, verifier]))),
              returnValueForMissingStub: _i8.Future<_i4.ConfirmationResult>.value(
                  _FakeConfirmationResult_3(this, Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]))))
          as _i8.Future<_i4.ConfirmationResult>);
  @override
  _i8.Future<_i4.UserCredential> signInWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithPopup, [provider]),
              returnValue: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#signInWithPopup, [provider]))),
              returnValueForMissingStub: _i8.Future<_i4.UserCredential>.value(
                  _FakeUserCredential_2(
                      this, Invocation.method(#signInWithPopup, [provider]))))
          as _i8.Future<_i4.UserCredential>);
  @override
  _i8.Future<void> signInWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithRedirect, [provider]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> signOut() => (super.noSuchMethod(
      Invocation.method(#signOut, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#verifyPasswordResetCode, [code]),
              returnValue: _i8.Future<String>.value(''),
              returnValueForMissingStub: _i8.Future<String>.value(''))
          as _i8.Future<String>);
  @override
  _i8.Future<void> verifyPhoneNumber(
          {String? phoneNumber,
          _i3.PhoneMultiFactorInfo? multiFactorInfo,
          _i3.PhoneVerificationCompleted? verificationCompleted,
          _i3.PhoneVerificationFailed? verificationFailed,
          _i3.PhoneCodeSent? codeSent,
          _i3.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
          String? autoRetrievedSmsCodeForTesting,
          Duration? timeout = const Duration(seconds: 30),
          int? forceResendingToken,
          _i3.MultiFactorSession? multiFactorSession}) =>
      (super.noSuchMethod(
              Invocation.method(#verifyPhoneNumber, [], {
                #phoneNumber: phoneNumber,
                #multiFactorInfo: multiFactorInfo,
                #verificationCompleted: verificationCompleted,
                #verificationFailed: verificationFailed,
                #codeSent: codeSent,
                #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
                #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
                #timeout: timeout,
                #forceResendingToken: forceResendingToken,
                #multiFactorSession: multiFactorSession
              }),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i9.GoogleSignIn {
  @override
  _i10.SignInOption get signInOption =>
      (super.noSuchMethod(Invocation.getter(#signInOption),
              returnValue: _i10.SignInOption.standard,
              returnValueForMissingStub: _i10.SignInOption.standard)
          as _i10.SignInOption);
  @override
  List<String> get scopes => (super.noSuchMethod(Invocation.getter(#scopes),
      returnValue: <String>[],
      returnValueForMissingStub: <String>[]) as List<String>);
  @override
  _i8.Stream<_i9.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(Invocation.getter(#onCurrentUserChanged),
              returnValue: _i8.Stream<_i9.GoogleSignInAccount?>.empty(),
              returnValueForMissingStub:
                  _i8.Stream<_i9.GoogleSignInAccount?>.empty())
          as _i8.Stream<_i9.GoogleSignInAccount?>);
  @override
  _i8.Future<_i9.GoogleSignInAccount?> signInSilently(
          {bool? suppressErrors = true, bool? reAuthenticate = false}) =>
      (super.noSuchMethod(
              Invocation.method(#signInSilently, [], {
                #suppressErrors: suppressErrors,
                #reAuthenticate: reAuthenticate
              }),
              returnValue: _i8.Future<_i9.GoogleSignInAccount?>.value(),
              returnValueForMissingStub:
                  _i8.Future<_i9.GoogleSignInAccount?>.value())
          as _i8.Future<_i9.GoogleSignInAccount?>);
  @override
  _i8.Future<bool> isSignedIn() =>
      (super.noSuchMethod(Invocation.method(#isSignedIn, []),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<_i9.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(Invocation.method(#signIn, []),
              returnValue: _i8.Future<_i9.GoogleSignInAccount?>.value(),
              returnValueForMissingStub:
                  _i8.Future<_i9.GoogleSignInAccount?>.value())
          as _i8.Future<_i9.GoogleSignInAccount?>);
  @override
  _i8.Future<_i9.GoogleSignInAccount?> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue: _i8.Future<_i9.GoogleSignInAccount?>.value(),
              returnValueForMissingStub:
                  _i8.Future<_i9.GoogleSignInAccount?>.value())
          as _i8.Future<_i9.GoogleSignInAccount?>);
  @override
  _i8.Future<_i9.GoogleSignInAccount?> disconnect() =>
      (super.noSuchMethod(Invocation.method(#disconnect, []),
              returnValue: _i8.Future<_i9.GoogleSignInAccount?>.value(),
              returnValueForMissingStub:
                  _i8.Future<_i9.GoogleSignInAccount?>.value())
          as _i8.Future<_i9.GoogleSignInAccount?>);
  @override
  _i8.Future<bool> requestScopes(List<String>? scopes) =>
      (super.noSuchMethod(Invocation.method(#requestScopes, [scopes]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i6.FirebaseFirestore {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
          returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          returnValueForMissingStub:
              _FakeFirebaseApp_0(this, Invocation.getter(#app)))
      as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) =>
      super.noSuchMethod(Invocation.setter(#app, _app),
          returnValueForMissingStub: null);
  @override
  set settings(_i5.Settings? settings) =>
      super.noSuchMethod(Invocation.setter(#settings, settings),
          returnValueForMissingStub: null);
  @override
  _i5.Settings get settings => (super.noSuchMethod(Invocation.getter(#settings),
      returnValue: _FakeSettings_4(this, Invocation.getter(#settings)),
      returnValueForMissingStub:
          _FakeSettings_4(this, Invocation.getter(#settings))) as _i5.Settings);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
              returnValue: <dynamic, dynamic>{},
              returnValueForMissingStub: <dynamic, dynamic>{})
          as Map<dynamic, dynamic>);
  @override
  _i6.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(Invocation.method(#collection, [collectionPath]),
              returnValue: _FakeCollectionReference_5<Map<String, dynamic>>(
                  this, Invocation.method(#collection, [collectionPath])),
              returnValueForMissingStub:
                  _FakeCollectionReference_5<Map<String, dynamic>>(
                      this, Invocation.method(#collection, [collectionPath])))
          as _i6.CollectionReference<Map<String, dynamic>>);
  @override
  _i6.WriteBatch batch() => (super.noSuchMethod(Invocation.method(#batch, []),
          returnValue: _FakeWriteBatch_6(this, Invocation.method(#batch, [])),
          returnValueForMissingStub:
              _FakeWriteBatch_6(this, Invocation.method(#batch, [])))
      as _i6.WriteBatch);
  @override
  _i8.Future<void> clearPersistence() => (super.noSuchMethod(
      Invocation.method(#clearPersistence, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> enablePersistence(
          [_i5.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
              Invocation.method(#enablePersistence, [persistenceSettings]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i6.LoadBundleTask loadBundle(_i11.Uint8List? bundle) => (super.noSuchMethod(
      Invocation.method(#loadBundle, [bundle]),
      returnValue:
          _FakeLoadBundleTask_7(this, Invocation.method(#loadBundle, [bundle])),
      returnValueForMissingStub: _FakeLoadBundleTask_7(
          this, Invocation.method(#loadBundle, [bundle]))) as _i6
      .LoadBundleTask);
  @override
  void useFirestoreEmulator(String? host, int? port,
          {bool? sslEnabled = false}) =>
      super.noSuchMethod(
          Invocation.method(
              #useFirestoreEmulator, [host, port], {#sslEnabled: sslEnabled}),
          returnValueForMissingStub: null);
  @override
  _i8.Future<_i6.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(String? name,
          {_i5.GetOptions? options = const _i5.GetOptions()}) =>
      (super.noSuchMethod(Invocation.method(#namedQueryGet, [name], {#options: options}),
              returnValue: _i8.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(_FakeQuerySnapshot_8<Map<String, dynamic>>(
                  this,
                  Invocation.method(#namedQueryGet, [name], {#options: options}))),
              returnValueForMissingStub:
                  _i8.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
                      _FakeQuerySnapshot_8<Map<String, dynamic>>(this, Invocation.method(#namedQueryGet, [name], {#options: options}))))
          as _i8.Future<_i6.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i6.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(Invocation.method(#collectionGroup, [collectionPath]),
              returnValue: _FakeQuery_9<Map<String, dynamic>>(
                  this, Invocation.method(#collectionGroup, [collectionPath])),
              returnValueForMissingStub: _FakeQuery_9<Map<String, dynamic>>(
                  this, Invocation.method(#collectionGroup, [collectionPath])))
          as _i6.Query<Map<String, dynamic>>);
  @override
  _i8.Future<void> disableNetwork() => (super.noSuchMethod(
      Invocation.method(#disableNetwork, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i6.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(Invocation.method(#doc, [documentPath]),
              returnValue: _FakeDocumentReference_10<Map<String, dynamic>>(
                  this, Invocation.method(#doc, [documentPath])),
              returnValueForMissingStub:
                  _FakeDocumentReference_10<Map<String, dynamic>>(
                      this, Invocation.method(#doc, [documentPath])))
          as _i6.DocumentReference<Map<String, dynamic>>);
  @override
  _i8.Future<void> enableNetwork() => (super.noSuchMethod(
      Invocation.method(#enableNetwork, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Stream<void> snapshotsInSync() => (super.noSuchMethod(
      Invocation.method(#snapshotsInSync, []),
      returnValue: _i8.Stream<void>.empty(),
      returnValueForMissingStub: _i8.Stream<void>.empty()) as _i8.Stream<void>);
  @override
  _i8.Future<T> runTransaction<T>(_i6.TransactionHandler<T>? transactionHandler,
          {Duration? timeout = const Duration(seconds: 30),
          int? maxAttempts = 5}) =>
      (super.noSuchMethod(
              Invocation.method(#runTransaction, [transactionHandler],
                  {#timeout: timeout, #maxAttempts: maxAttempts}),
              returnValue: _i8.Future<T>.value(null),
              returnValueForMissingStub: _i8.Future<T>.value(null))
          as _i8.Future<T>);
  @override
  _i8.Future<void> terminate() => (super.noSuchMethod(
      Invocation.method(#terminate, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> waitForPendingWrites() => (super.noSuchMethod(
      Invocation.method(#waitForPendingWrites, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
}

/// A class which mocks [FirebaseMessaging].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseMessaging extends _i1.Mock implements _i12.FirebaseMessaging {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
          returnValue: _FakeFirebaseApp_0(this, Invocation.getter(#app)),
          returnValueForMissingStub:
              _FakeFirebaseApp_0(this, Invocation.getter(#app)))
      as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) =>
      super.noSuchMethod(Invocation.setter(#app, _app),
          returnValueForMissingStub: null);
  @override
  bool get isAutoInitEnabled =>
      (super.noSuchMethod(Invocation.getter(#isAutoInitEnabled),
          returnValue: false, returnValueForMissingStub: false) as bool);
  @override
  _i8.Stream<String> get onTokenRefresh =>
      (super.noSuchMethod(Invocation.getter(#onTokenRefresh),
              returnValue: _i8.Stream<String>.empty(),
              returnValueForMissingStub: _i8.Stream<String>.empty())
          as _i8.Stream<String>);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
              returnValue: <dynamic, dynamic>{},
              returnValueForMissingStub: <dynamic, dynamic>{})
          as Map<dynamic, dynamic>);
  @override
  _i8.Future<_i7.RemoteMessage?> getInitialMessage() =>
      (super.noSuchMethod(Invocation.method(#getInitialMessage, []),
              returnValue: _i8.Future<_i7.RemoteMessage?>.value(),
              returnValueForMissingStub: _i8.Future<_i7.RemoteMessage?>.value())
          as _i8.Future<_i7.RemoteMessage?>);
  @override
  _i8.Future<void> deleteToken() => (super.noSuchMethod(
      Invocation.method(#deleteToken, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<String?> getAPNSToken() =>
      (super.noSuchMethod(Invocation.method(#getAPNSToken, []),
              returnValue: _i8.Future<String?>.value(),
              returnValueForMissingStub: _i8.Future<String?>.value())
          as _i8.Future<String?>);
  @override
  _i8.Future<String?> getToken({String? vapidKey}) => (super.noSuchMethod(
          Invocation.method(#getToken, [], {#vapidKey: vapidKey}),
          returnValue: _i8.Future<String?>.value(),
          returnValueForMissingStub: _i8.Future<String?>.value())
      as _i8.Future<String?>);
  @override
  _i8.Future<bool> isSupported() =>
      (super.noSuchMethod(Invocation.method(#isSupported, []),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<_i7.NotificationSettings> getNotificationSettings() =>
      (super.noSuchMethod(Invocation.method(#getNotificationSettings, []),
          returnValue: _i8.Future<_i7.NotificationSettings>.value(
              _FakeNotificationSettings_11(
                  this, Invocation.method(#getNotificationSettings, []))),
          returnValueForMissingStub: _i8.Future<_i7.NotificationSettings>.value(
              _FakeNotificationSettings_11(
                  this, Invocation.method(#getNotificationSettings, [])))) as _i8
          .Future<_i7.NotificationSettings>);
  @override
  _i8.Future<_i7.NotificationSettings> requestPermission(
          {bool? alert = true,
          bool? announcement = false,
          bool? badge = true,
          bool? carPlay = false,
          bool? criticalAlert = false,
          bool? provisional = false,
          bool? sound = true}) =>
      (super.noSuchMethod(
          Invocation.method(#requestPermission, [], {
            #alert: alert,
            #announcement: announcement,
            #badge: badge,
            #carPlay: carPlay,
            #criticalAlert: criticalAlert,
            #provisional: provisional,
            #sound: sound
          }),
          returnValue: _i8.Future<_i7.NotificationSettings>.value(
              _FakeNotificationSettings_11(
                  this,
                  Invocation.method(#requestPermission, [], {
                    #alert: alert,
                    #announcement: announcement,
                    #badge: badge,
                    #carPlay: carPlay,
                    #criticalAlert: criticalAlert,
                    #provisional: provisional,
                    #sound: sound
                  }))),
          returnValueForMissingStub: _i8.Future<_i7.NotificationSettings>.value(
              _FakeNotificationSettings_11(
                  this,
                  Invocation.method(#requestPermission, [], {
                    #alert: alert,
                    #announcement: announcement,
                    #badge: badge,
                    #carPlay: carPlay,
                    #criticalAlert: criticalAlert,
                    #provisional: provisional,
                    #sound: sound
                  })))) as _i8.Future<_i7.NotificationSettings>);
  @override
  _i8.Future<void> sendMessage(
          {String? to,
          Map<String, String>? data,
          String? collapseKey,
          String? messageId,
          String? messageType,
          int? ttl}) =>
      (super.noSuchMethod(
              Invocation.method(#sendMessage, [], {
                #to: to,
                #data: data,
                #collapseKey: collapseKey,
                #messageId: messageId,
                #messageType: messageType,
                #ttl: ttl
              }),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> setAutoInitEnabled(bool? enabled) => (super.noSuchMethod(
      Invocation.method(#setAutoInitEnabled, [enabled]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> setForegroundNotificationPresentationOptions(
          {bool? alert = false, bool? badge = false, bool? sound = false}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #setForegroundNotificationPresentationOptions,
                  [],
                  {#alert: alert, #badge: badge, #sound: sound}),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<void> subscribeToTopic(String? topic) => (super.noSuchMethod(
      Invocation.method(#subscribeToTopic, [topic]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> unsubscribeFromTopic(String? topic) => (super.noSuchMethod(
      Invocation.method(#unsubscribeFromTopic, [topic]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i13.SharedPreferences {
  @override
  Set<String> getKeys() => (super.noSuchMethod(Invocation.method(#getKeys, []),
      returnValue: <String>{},
      returnValueForMissingStub: <String>{}) as Set<String>);
  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key]),
          returnValueForMissingStub: null) as Object?);
  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key]),
          returnValueForMissingStub: null) as bool?);
  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key]),
          returnValueForMissingStub: null) as int?);
  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key]),
          returnValueForMissingStub: null) as double?);
  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key]),
          returnValueForMissingStub: null) as String?);
  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(Invocation.method(#containsKey, [key]),
          returnValue: false, returnValueForMissingStub: false) as bool);
  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]),
          returnValueForMissingStub: null) as List<String>?);
  @override
  _i8.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(Invocation.method(#setBool, [key, value]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(Invocation.method(#setInt, [key, value]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(Invocation.method(#setDouble, [key, value]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(Invocation.method(#setString, [key, value]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(Invocation.method(#setStringList, [key, value]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> remove(String? key) =>
      (super.noSuchMethod(Invocation.method(#remove, [key]),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> commit() =>
      (super.noSuchMethod(Invocation.method(#commit, []),
              returnValue: _i8.Future<bool>.value(false),
              returnValueForMissingStub: _i8.Future<bool>.value(false))
          as _i8.Future<bool>);
  @override
  _i8.Future<bool> clear() => (super.noSuchMethod(Invocation.method(#clear, []),
          returnValue: _i8.Future<bool>.value(false),
          returnValueForMissingStub: _i8.Future<bool>.value(false))
      as _i8.Future<bool>);
  @override
  _i8.Future<void> reload() => (super.noSuchMethod(
      Invocation.method(#reload, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
}
