// Mocks generated by Mockito 5.3.0 from annotations
// in we_pay/test/application/auth/auth_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:we_pay/domain/auth/auth_failure.dart' as _i6;
import 'package:we_pay/domain/auth/i_auth_facade.dart' as _i8;
import 'package:we_pay/domain/auth/value_objects.dart' as _i7;
import 'package:we_pay/infrastructure/repositories/firebase_auth_facade.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOption_0<A> extends _i1.SmartFake implements _i2.Option<A> {
  _FakeOption_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [FirebaseAuthFacade].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthFacade extends _i1.Mock
    implements _i3.FirebaseAuthFacade {
  @override
  _i4.Future<_i2.Option<_i5.User>> getSignedUser() => (super.noSuchMethod(
      Invocation.method(#getSignedUser, []),
      returnValue: _i4.Future<_i2.Option<_i5.User>>.value(
          _FakeOption_0<_i5.User>(this, Invocation.method(#getSignedUser, []))),
      returnValueForMissingStub: _i4.Future<_i2.Option<_i5.User>>.value(
          _FakeOption_0<_i5.User>(
              this, Invocation.method(#getSignedUser, [])))) as _i4
      .Future<_i2.Option<_i5.User>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> registerWithEmailAndPassword(
          {_i7.Name? name, _i7.EmailAddress? email, _i7.Password? password}) =>
      (super.noSuchMethod(Invocation.method(#registerWithEmailAndPassword, [], {#name: name, #email: email, #password: password}),
              returnValue: _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                  _FakeEither_1<_i6.AuthFailure, _i2.Unit>(
                      this,
                      Invocation.method(#registerWithEmailAndPassword, [],
                          {#name: name, #email: email, #password: password}))),
              returnValueForMissingStub: _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(_FakeEither_1<_i6.AuthFailure, _i2.Unit>(this, Invocation.method(#registerWithEmailAndPassword, [], {#name: name, #email: email, #password: password}))))
          as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> signInWithEmailAndPassword(
          {_i7.EmailAddress? email, _i7.Password? password}) =>
      (super.noSuchMethod(Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}),
              returnValue:
                  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                      _FakeEither_1<_i6.AuthFailure, _i2.Unit>(
                          this,
                          Invocation.method(
                              #signInWithEmailAndPassword,
                              [],
                              {#email: email, #password: password}))),
              returnValueForMissingStub: _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(_FakeEither_1<_i6.AuthFailure, _i2.Unit>(this, Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}))))
          as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> signInWithGoogle() => (super
          .noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue:
                  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                      _FakeEither_1<_i6.AuthFailure, _i2.Unit>(
                          this, Invocation.method(#signInWithGoogle, []))),
              returnValueForMissingStub:
                  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                      _FakeEither_1<_i6.AuthFailure, _i2.Unit>(this, Invocation.method(#signInWithGoogle, []))))
      as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<void> saveOrUpdateUserInFirestore({String? name, String? email}) =>
      (super.noSuchMethod(
          Invocation.method(
              #saveOrUpdateUserInFirestore, [], {#name: name, #email: email}),
          returnValue: _i4.Future<void>.value(),
          returnValueForMissingStub:
              _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateNotificationToken() => (super.noSuchMethod(
      Invocation.method(#updateNotificationToken, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
      Invocation.method(#signOut, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> saveEmailAndPassword(String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#saveEmailAndPassword, [email, password]),
              returnValue: _i4.Future<void>.value(),
              returnValueForMissingStub: _i4.Future<void>.value())
          as _i4.Future<void>);
  @override
  _i4.Future<void> saveCredentials(String? accessToken, String? idToken) =>
      (super.noSuchMethod(
              Invocation.method(#saveCredentials, [accessToken, idToken]),
              returnValue: _i4.Future<void>.value(),
              returnValueForMissingStub: _i4.Future<void>.value())
          as _i4.Future<void>);
}

/// A class which mocks [IAuthFacade].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthFacade extends _i1.Mock implements _i8.IAuthFacade {
  @override
  _i4.Future<_i2.Option<_i5.User>> getSignedUser() => (super.noSuchMethod(
      Invocation.method(#getSignedUser, []),
      returnValue: _i4.Future<_i2.Option<_i5.User>>.value(
          _FakeOption_0<_i5.User>(this, Invocation.method(#getSignedUser, []))),
      returnValueForMissingStub: _i4.Future<_i2.Option<_i5.User>>.value(
          _FakeOption_0<_i5.User>(
              this, Invocation.method(#getSignedUser, [])))) as _i4
      .Future<_i2.Option<_i5.User>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> registerWithEmailAndPassword(
          {_i7.Name? name, _i7.EmailAddress? email, _i7.Password? password}) =>
      (super.noSuchMethod(Invocation.method(#registerWithEmailAndPassword, [], {#name: name, #email: email, #password: password}),
              returnValue: _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                  _FakeEither_1<_i6.AuthFailure, _i2.Unit>(
                      this,
                      Invocation.method(#registerWithEmailAndPassword, [],
                          {#name: name, #email: email, #password: password}))),
              returnValueForMissingStub: _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(_FakeEither_1<_i6.AuthFailure, _i2.Unit>(this, Invocation.method(#registerWithEmailAndPassword, [], {#name: name, #email: email, #password: password}))))
          as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> signInWithEmailAndPassword(
          {_i7.EmailAddress? email, _i7.Password? password}) =>
      (super.noSuchMethod(Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}),
              returnValue:
                  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                      _FakeEither_1<_i6.AuthFailure, _i2.Unit>(
                          this,
                          Invocation.method(
                              #signInWithEmailAndPassword,
                              [],
                              {#email: email, #password: password}))),
              returnValueForMissingStub: _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(_FakeEither_1<_i6.AuthFailure, _i2.Unit>(this, Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}))))
          as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>> signInWithGoogle() => (super
          .noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue:
                  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                      _FakeEither_1<_i6.AuthFailure, _i2.Unit>(
                          this, Invocation.method(#signInWithGoogle, []))),
              returnValueForMissingStub:
                  _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>.value(
                      _FakeEither_1<_i6.AuthFailure, _i2.Unit>(this, Invocation.method(#signInWithGoogle, []))))
      as _i4.Future<_i2.Either<_i6.AuthFailure, _i2.Unit>>);
  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
      Invocation.method(#signOut, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> saveOrUpdateUserInFirestore() => (super.noSuchMethod(
      Invocation.method(#saveOrUpdateUserInFirestore, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateNotificationToken() => (super.noSuchMethod(
      Invocation.method(#updateNotificationToken, []),
      returnValue: _i4.Future<void>.value(),
      returnValueForMissingStub: _i4.Future<void>.value()) as _i4.Future<void>);
}
